#!/bin/bash
#
# Usage: rofi -modi winfu:./rofi-winfu -show winfu

# don't show the current window in the list
HIDE_CURRENT_WINDOW=1
# don't show windows that aren't on a specific workspace. in most window mgrs,
# this refers to a window on all workspaces. on i3, it refers to scratchpad wins.
# makes sense to set to 1 in i3 because rofi can't show scratchpad windows
# anyways.
HIDE_WORKSPACELESS_WINDOWS=1
# Note this separator is actually a wonky unicode char that looks like a space
# but doesn't trigger rofi's tokenizing heh heh
SEP=' '
# a character so strange that it's unlikely to show up in the title of any
# window. and if it does, then, well, hats off to it for breaking my shit.
SPLIT='Ï½'

if [ "$1" == "" ]; then
	if [ "${HIDE_CURRENT_WINDOW}" == "1" ]; then
		cur_win=$(printf "0x%08X" $(xdotool getwindowfocus))
	fi
	cur_desktop="<nope>"
	desktops="$(wmctrl -d | awk '{$2=""; $3=""; $4=""; $5=""; $6=""; $7=""; $8=""; print $0}')"
	res=""
	while IFS= read -r line; do
		id="$(echo "${line}" | awk '{print $1}')"
		desktop_id="$(echo "${line}" | awk '{print $2}')"
		desktop_name="$(echo "${desktops}" | grep "^${desktop_id} " | awk '{$1=""; print $0}' | sed 's/^ \+//')"
		title="$(echo "${line}" | awk '{$1 = ""; $2 = ""; $3 = ""; print $0}' | sed 's/^ \+//')"
		class="$(xprop -id ${id} WM_CLASS | sed 's/.*, //' | sed 's/"//g')"

		if [ "${desktop_id}" == "-1" ] && [ "${HIDE_WORKSPACELESS_WINDOWS}" == "1" ]; then
			continue;
		fi

		if [ "${HIDE_CURRENT_WINDOW}" == "1" ]; then
			if [ "${id}" == "${cur_win}" ]; then
				continue;
			fi
		fi

		winline="W:${desktop_name}${SPLIT}${class}${SPLIT}${title}${SPLIT}${id}"
		if [ "${res}" == "" ]; then
			res="${winline}"
		else
			res="${res}"$'\n'"${winline}"
		fi
	done <<< "$(wmctrl -l)"
	echo "${res}" \
			| column -t -s "${SPLIT}" -o "${SEP}${SEP}"
else
	id=$(echo "$1" | sed 's/.*0x/0x/')
	wmctrl -i -a ${id}
fi

