#!/bin/bash
#
# Usage: rofi -modi winfu:./rofi-winfu -show winfu

# For profiling. set #!/bin/bash -x and enable this line:
#PS4='+ $(date "+%s.%N ($LINENO) ")'

# don't show the current window in the list
HIDE_CURRENT_WINDOW=1
# don't show windows that aren't on a specific workspace. in most window mgrs,
# this refers to a window on all workspaces. on i3, it refers to scratchpad wins.
HIDE_WORKSPACELESS_WINDOWS=0
# Hide windows in a specific workspace. Generally this is used if you have a
# "dumping ground" workspace where you keep things you rotate in and out of
# active service.
HIDE_WORKSPACE="10"
# Note this separator is actually a wonky unicode char that looks like a space
# but doesn't trigger rofi's tokenizing heh heh
SEP=' '
# a character so strange that it's unlikely to show up in the title of any
# window. and if it does, then, well, hats off to it for breaking my shit.
SPLIT='Ï½'

if [ "$1" == "" ]; then
	cur_win="0x00000000"
	if [ "${HIDE_CURRENT_WINDOW}" == "1" ]; then
		cur_win=$(printf "0x%08X" $(xdotool getwindowfocus))
	fi
	cur_desktop="<nope>"
	desktops="$(wmctrl -d | cut -d ' ' -f 1,12- | perl -pe 's/ +/ /g')"
	declare -A desktop_name_idx
	while IFS= read -r line; do
		id=$(echo $line | cut -d ' ' -f 1)
		name=$(echo $line | cut -d ' ' -f 2-)
		desktop_name_idx+=([$id]=$name)
	done <<< "$(echo "$desktops")"
	res=""
	while IFS= read -r line; do
		id="$(echo "${line}" | cut -d ' ' -f 1)"
		desktop_id="$(echo "${line}" | cut -d ' ' -f 2)"

		if [ "${desktop_id}" == "-1" ] && [ "${HIDE_WORKSPACELESS_WINDOWS}" == "1" ]; then
			continue;
		fi

		desktop_name="${desktop_name_idx[$desktop_id]}"

		if [ "${HIDE_WORKSPACE}" == "${desktop_name}" ]; then
			continue;
		fi

		class="$(echo "${line}" | cut -d ' ' -f 3 | cut -d '.' -f 2)"
		title="$(echo "${line}" | cut -d ' ' -f 5- | cut -c -100)"

		winline="W:${desktop_name:-"-"}${SPLIT}${class}${SPLIT}${title}${SPLIT}${id}"
		if [ "${res}" == "" ]; then
			res="${winline}"
		else
			res="${res}"$'\n'"${winline}"
		fi
	done <<< "$(wmctrl -lx | grep -v "^${cur_win}" | perl -pe 's/ +/ /g')"
	echo "${res}" \
		| column -t -s "${SPLIT}" -o "${SEP}${SEP}"
else
	id=$(echo "$1" | perl -pe 's/.*0x/0x/')
	xdotool windowactivate ${id}
	#wmctrl -i -a ${id}
fi

